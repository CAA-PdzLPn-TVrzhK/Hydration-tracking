import 'package:flutter/foundation.dart' show kIsWeb;
import 'package:flutter/material.dart';
// import 'package:flutter_local_notifications/flutter_local_notifications.dart';
// import 'package:timezone/data/latest.dart' as tz;

class NotificationService {
  // static final FlutterLocalNotificationsPlugin _notifications = FlutterLocalNotificationsPlugin();

  static Future<void> initialize() async {
    if (!kIsWeb) {
      // tz.initializeTimeZones();
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    }
    // –î–ª—è web –Ω–∏—á–µ–≥–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è
  }

  static Future<void> showAchievementNotification({
    required BuildContext context,
    required String title,
    required String body,
    String? payload,
  }) async {
    if (kIsWeb) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('$title\n$body')),
      );
    } else {
      // –ó–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —á–µ—Ä–µ–∑ flutter_local_notifications
      // await _notifications.show(...);
    }
  }

  static Future<void> showGoalReachedNotification(BuildContext context) async {
    await showAchievementNotification(
      context: context,
      title: 'Goal Reached! üéâ',
      body: 'Congratulations! You\'ve reached your daily hydration goal.',
      payload: 'goal_reached',
    );
  }

  static Future<void> showStreakNotification(
      BuildContext context, int days) async {
    await showAchievementNotification(
      context: context,
      title: 'Streak! üî•',
      body: 'You\'ve maintained your hydration goal for $days days!',
      payload: 'streak_$days',
    );
  }
}
